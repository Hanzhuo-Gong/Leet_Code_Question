'''
John works at a clothing store. He has a large pile of socks that he must pair by color for sale. 
Given an array of integers representing the color of each sock, determine how many pairs of socks 
with matching colors there are.
For example, there are n=7 socks with colors ar=[1,2,1,2,1,3,2]. There is one pair of color 1 and 
one of color 2. There are three odd socks left, one of each color. The number of pairs is 2.
'''


import math
import os
import random
import re
import sys

# Complete the sockMerchant function below.
def sockMerchant(n, ar):
    count = 0
    i = 0
    ar.sort()
    ar.append('#')

    while i < len(ar):
        if ar[i] == ar[i+1]:
            count += 1
            i+= 2
        else:
            i += 1
    return count


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input())

    ar = list(map(int, input().rstrip().split()))

    result = sockMerchant(n, ar)

    fptr.write(str(result) + '\n')

    fptr.close()


'''
note for myself:
1. Unlike C++, python for loop can't restart the index or change the index number in the middle of for loop,
so use while loop to control the index will be better.

2. Instead of use double while loop to do the search, you can sort the array first, then you only need to compare
the first two elements and move forward the index instead of tracking two index i & j.
'''
